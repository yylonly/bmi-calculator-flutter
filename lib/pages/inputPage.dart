import 'package:flutter/material.dart';import 'package:font_awesome_flutter/font_awesome_flutter.dart';import 'package:bmi_calculator/widgets/iconContent.dart';import 'package:bmi_calculator/widgets/reuseCard.dart';import 'package:bmi_calculator/constants.dart';import 'package:bmi_calculator/pages/ResultPage.dart';import 'package:bmi_calculator/widgets/bottomButton.dart';import 'package:bmi_calculator/widgets/roundButton.dart';import 'package:bmi_calculator/calculateBrain.dart';class InputPage extends StatefulWidget {  @override  _InputPageState createState() => _InputPageState();}enum Gender { Male, Female }class _InputPageState extends State<InputPage> {  Gender selectedGender;  int height = 180;  int weight = 60;  int age = 25;  @override  Widget build(BuildContext context) {    return Scaffold(        appBar: AppBar(          title: Text('BMI CALCULATOR'),        ),        body: Column(          children: <Widget>[            Expanded(              child: Row(                children: <Widget>[                  Expanded(                    child: ReuseCard(                      onPress: () {                        setState(() {                          selectedGender = Gender.Male;                        });                      },                      color: selectedGender == Gender.Male                          ? kActiveColor                          : kInactiveColor,                      child: IconContent(                        icon: FontAwesomeIcons.mars,                        label: 'MALE',                      ),                    ),                  ),                  Expanded(                    child: ReuseCard(                      onPress: () {                        setState(() {                          selectedGender = Gender.Female;                        });                      },                      color: selectedGender == Gender.Female                          ? kActiveColor                          : kInactiveColor,                      child: IconContent(                        icon: FontAwesomeIcons.venus,                        label: 'FEMALE',                      ),                    ),                  ),                ],              ),            ),            Expanded(              child: ReuseCard(                color: kActiveColor,                child: Column(                  mainAxisAlignment: MainAxisAlignment.center,                  children: <Widget>[                    Text(                      'HEIGHT',                      style: kLabelTextStyle,                    ),                    Row(                      mainAxisAlignment: MainAxisAlignment.center,                      crossAxisAlignment: CrossAxisAlignment.baseline,                      textBaseline: TextBaseline.alphabetic,                      children: <Widget>[                        Text(                          height.toString(),                          style: kNumTextStyle,                        ),                        Text(                          'cm',                          style: kLabelTextStyle,                        ),                      ],                    ),                    SliderTheme(                      data: SliderTheme.of(context).copyWith(                        inactiveTrackColor: Color(0xFF8D8E98),                        activeTrackColor: Colors.white,                        thumbColor: Color(0xFFEB1555),                        overlayColor: Color(0x29EB1555),                        thumbShape: RoundSliderThumbShape(                          enabledThumbRadius: 15.0,                        ),                        overlayShape: RoundSliderOverlayShape(                          overlayRadius: 30.0,                        ),                      ),                      child: Slider(                        value: height.toDouble(),                        min: 120.0,                        max: 220.0,                        onChanged: (double newValue) {                          setState(() {                            height = newValue.round();                          });                        },                      ),                    ),                  ],                ),              ),            ),            Expanded(              child: Row(                children: <Widget>[                  Expanded(                    child: ReuseCard(                      color: kActiveColor,                      child: Column(                        mainAxisAlignment: MainAxisAlignment.center,                        children: <Widget>[                          Text(                            'WEIGHT',                            style: kLabelTextStyle,                          ),                          Text(                            weight.toString(),                            style: kNumTextStyle,                          ),                          Row(                            mainAxisAlignment: MainAxisAlignment.center,                            children: <Widget>[                              RoundIconButtion(                                icon: FontAwesomeIcons.minus,                                onPress: () {                                  setState(() {                                    weight--;                                  });                                },                              ),                              SizedBox(                                width: 10,                              ),                              RoundIconButtion(                                icon: FontAwesomeIcons.plus,                                onPress: () {                                  setState(() {                                    weight++;                                  });                                },                              ),                            ],                          )                        ],                      ),                    ),                  ),                  Expanded(                    child: ReuseCard(                      color: kActiveColor,                      child: Column(                        mainAxisAlignment: MainAxisAlignment.center,                        children: <Widget>[                          Text(                            'AGE',                            style: kLabelTextStyle,                          ),                          Text(                            age.toString(),                            style: kNumTextStyle,                          ),                          Row(                            mainAxisAlignment: MainAxisAlignment.center,                            children: <Widget>[                              RoundIconButtion(                                icon: FontAwesomeIcons.minus,                                onPress: () {                                  setState(() {                                    age--;                                  });                                },                              ),                              SizedBox(                                width: 10,                              ),                              RoundIconButtion(                                icon: FontAwesomeIcons.plus,                                onPress: () {                                  setState(() {                                    age++;                                  });                                },                              ),                            ],                          )                        ],                      ),                    ),                  ),                ],              ),            ),            BottomButton(              onTap: () {                CalculateBrain calc = CalculateBrain(                  height: height,                  weight: weight,                );                Navigator.push(                    context,                    MaterialPageRoute(                        builder: (context) => ResultPage(                              bmi: calc.calculateBMI(),                              result: calc.getResult(),                              suggestion: calc.getSuggestion(),                            )));              },              buttonText: 'Calulate',            )          ],        ));  }}